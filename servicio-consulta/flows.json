[
    {
        "id": "5c6c220009097d76",
        "type": "tab",
        "label": "Recursos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "412c2389580c0420",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "",
        "port": "",
        "dbName": "servidor_central",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "mongodb+srv://nodered:QJiGBpRXyPuunSFR@cluster0.jz2vpna.mongodb.net",
        "advanced": "{\"maxPoolSize\": 1}",
        "uriTabActive": "tab-uri-advanced"
    },
    {
        "id": "d52403817db3438f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${BROKER_SERVICE}",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ac72a6a562f61c0e",
        "type": "swagger-doc",
        "summary": "Servidores Locales",
        "description": "Devuelve el listado completo de servidores locales",
        "tags": "servidores-locales",
        "consumes": "",
        "produces": "application/json",
        "parameters": [],
        "responses": {
            "200": {
                "description": "200 OK. Listado servidores locales",
                "schema": {
                    "properties": {
                        "_id": {
                            "type": "string",
                            "format": "string",
                            "name": "_id",
                            "propertyRow": true
                        },
                        "longitud": {
                            "type": "number",
                            "format": "double",
                            "name": "longitud",
                            "propertyRow": true
                        },
                        "latitud": {
                            "type": "number",
                            "format": "double",
                            "name": "latitud",
                            "propertyRow": true
                        },
                        "estado": {
                            "name": "estado",
                            "propertyRow": true
                        }
                    }
                },
                "code": "200"
            },
            "404": {
                "description": "404 Not Found. Recurso no encontrado",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string",
                            "name": "mensaje",
                            "propertyRow": true
                        }
                    }
                },
                "code": "404"
            },
            "500": {
                "description": "500 Internal Server Error. Error genérico",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string",
                            "name": "mensaje",
                            "propertyRow": true
                        }
                    }
                },
                "code": "500"
            },
            "default": {
                "description": "Error inesperado",
                "code": "default"
            }
        },
        "deprecated": false
    },
    {
        "id": "bade85e7d85ca541",
        "type": "swagger-doc",
        "summary": "Servidores Locales por ID",
        "description": "Devuelve información de los sensores de un determinado servidor local",
        "tags": "servidores-locales",
        "consumes": "",
        "produces": "application/json",
        "parameters": [
            {
                "name": "idServidorLocal",
                "in": "path",
                "description": "ID del servidor local",
                "required": true,
                "type": "string",
                "format": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "200 OK. Listado de sensores por ID de servidor local",
                "schema": {
                    "properties": {
                        "_id": {
                            "type": "string",
                            "format": "string",
                            "name": "_id",
                            "propertyRow": true
                        },
                        "longitud": {
                            "type": "number",
                            "format": "double",
                            "name": "longitud",
                            "propertyRow": true
                        },
                        "latitud": {
                            "type": "number",
                            "format": "double",
                            "name": "latitud",
                            "propertyRow": true
                        },
                        "sensores": {
                            "name": "sensores",
                            "propertyRow": true
                        }
                    }
                },
                "code": "200"
            },
            "404": {
                "description": "404 Not Found. Recurso no encontrado",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string",
                            "name": "mensaje",
                            "propertyRow": true
                        }
                    }
                },
                "code": "404"
            },
            "500": {
                "description": "500 Internal Server Error. Error genérico",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string",
                            "name": "mensaje",
                            "propertyRow": true
                        }
                    }
                },
                "code": "500"
            },
            "default": {
                "description": "Error inesperado",
                "code": "default"
            }
        },
        "deprecated": false
    },
    {
        "id": "70fad81bdc6ea3f9",
        "type": "swagger-doc",
        "summary": "Autenticación con token",
        "description": "Devuelve un token de autenticación si las credenciales son correctas",
        "tags": "autenticación",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
            {
                "name": "credenciales",
                "in": "body",
                "description": "Credenciales usuario/contraseña",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "usuario": {
                            "type": "string",
                            "format": "string",
                            "name": "usuario",
                            "propertyRow": true
                        },
                        "contraseña": {
                            "type": "string",
                            "format": "string",
                            "name": "contraseña",
                            "propertyRow": true
                        }
                    }
                }
            }
        ],
        "responses": {
            "200": {
                "description": "200 OK. Autenticación válida",
                "schema": {
                    "properties": {
                        "token": {
                            "type": "string",
                            "format": "string",
                            "name": "token",
                            "propertyRow": true
                        },
                        "expires_in": {
                            "type": "number",
                            "format": "int32",
                            "name": "expires_in",
                            "propertyRow": true
                        }
                    }
                },
                "code": "200"
            },
            "401": {
                "description": "401 Unauthorized. Credenciales incorrectas",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string",
                            "name": "mensaje",
                            "propertyRow": true
                        }
                    }
                },
                "code": "401"
            },
            "500": {
                "description": "500 Internal Server Error. Error genérico",
                "code": "500"
            },
            "default": {
                "description": "Error inesperado",
                "code": "default"
            }
        },
        "deprecated": false
    },
    {
        "id": "63642fe65b1fd0af",
        "type": "swagger-doc",
        "summary": "Activar/Desactivar servidor local",
        "description": "Activar/Desactivar un determinado servidor local. Funcionalidad Interrumpir",
        "tags": "activar-desactivar",
        "consumes": "application/json",
        "produces": "application/json",
        "parameters": [
            {
                "name": "idServidorLocal",
                "in": "path",
                "description": "ID del servidor local",
                "required": true,
                "type": "string",
                "format": "string"
            },
            {
                "name": "interrumpir",
                "in": "body",
                "description": "Flag de interrupción true/false",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                        "interrumpir": {
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "Authorization",
                "in": "header",
                "description": "Bearer token de autorización",
                "required": true,
                "type": "string",
                "format": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "200 OK. Servidor Activado/Desactivado correctamente",
                "schema": {
                    "properties": {
                        "interrumpir": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "400": {
                "description": "400 Bad Request. Error en la petición o en el servidor local especificado",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "401": {
                "description": "401 Unauthorized. Token inválido",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "404": {
                "description": "404 Not Found. Servidor no encontrado",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "500": {
                "description": "500 Internal Server Error. Error genérico",
                "schema": {
                    "properties": {
                        "mensaje": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "default": {
                "description": "Error inesperado"
            }
        },
        "deprecated": false
    },
    {
        "id": "6307206ff6aca97e",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales",
        "method": "get",
        "upload": false,
        "swaggerDoc": "ac72a6a562f61c0e",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "3c6f1f329a2d47b9"
            ]
        ]
    },
    {
        "id": "9fa618fe9da221c4",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales_con_ultimo_estado",
        "operation": "find",
        "output": "toArray",
        "name": "recupera todos los servidores locales",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "272d19c2f704e304"
            ]
        ]
    },
    {
        "id": "3c6f1f329a2d47b9",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [{}]\n\n// LOG\nnode.log(`[${msg.req.method}] [${msg.req.url}] ` + JSON.stringify(msg.req.headers))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 100,
        "wires": [
            [
                "9fa618fe9da221c4"
            ]
        ]
    },
    {
        "id": "272d19c2f704e304",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "13e9f42d8c8e9cd4",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales/:idServidorLocal/sensores",
        "method": "get",
        "upload": false,
        "swaggerDoc": "bade85e7d85ca541",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "c2bd8afc37680276"
            ]
        ]
    },
    {
        "id": "c2bd8afc37680276",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [[\n    {\n        \"$match\": {\n            \"_id\": msg.req.params.idServidorLocal\n        }\n    }\n]]\n\n// LOG\nnode.log(`[${msg.req.method}] [${msg.req.url}] ` + JSON.stringify(msg.req.headers))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "0d816dc6f214e510"
            ]
        ]
    },
    {
        "id": "0d816dc6f214e510",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "sensores_por_servidor_local_con_ultimas_lecturas",
        "operation": "aggregate",
        "output": "toArray",
        "name": "servidores_locales aggregate",
        "x": 700,
        "y": 200,
        "wires": [
            [
                "674d2d3c13371a25"
            ]
        ]
    },
    {
        "id": "674d2d3c13371a25",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "response",
        "func": "if(msg.payload.length > 0)\n{\n    msg.sensores = msg.payload[0];\n    \n    return [msg, null];\n}else\n{\n    msg.payload = {\n        \"mensaje\": \"El servidor local especificado no existe\"\n    }\n    \n    msg.statusCode = 404\n    \n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "c102520e130563d4"
            ],
            [
                "6249665737d04a79"
            ]
        ]
    },
    {
        "id": "249f02b75edc8ce9",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1650,
        "y": 200,
        "wires": []
    },
    {
        "id": "5534d77d0d713935",
        "type": "catch",
        "z": "5c6c220009097d76",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 500,
        "wires": [
            [
                "2f0754f479c7d5d3"
            ]
        ]
    },
    {
        "id": "2f0754f479c7d5d3",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "error response",
        "func": "msg.payload = {\n    \"mensaje\": \"Error Interno del Servidor\"\n}\n\nmsg.statusCode = 500\n\n// LOG\nnode.log(`[ERROR] [${msg.req.method}] [${msg.req.url}] ` + JSON.stringify(msg.error))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 500,
        "wires": [
            [
                "e6d2c2b62123e651"
            ]
        ]
    },
    {
        "id": "e6d2c2b62123e651",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "2171be6809b7fd6e",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "70fad81bdc6ea3f9",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "aa9e1ba29b5b4cab"
            ]
        ]
    },
    {
        "id": "aa9e1ba29b5b4cab",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "prepara variables",
        "func": "msg.usuario = msg.payload.usuario === undefined ? \"\" : msg.payload.usuario.toString()\nmsg.payload = msg.payload.contraseña === undefined ? \"\" : msg.payload.contraseña.toString()\n\n// LOG\nnode.log(`[${msg.req.method}] [${msg.req.url}] ` + JSON.stringify(msg.req.headers))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "668f6646ff5b441e"
            ]
        ]
    },
    {
        "id": "668f6646ff5b441e",
        "type": "digest",
        "z": "5c6c220009097d76",
        "name": "",
        "algorithm": "SHA512",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "e846b61caf5b1f47"
            ]
        ]
    },
    {
        "id": "e846b61caf5b1f47",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "query",
        "func": "msg.payload = [{\n    \"usuario\": msg.usuario,\n    \"contraseña\": msg.payload\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "3b73689b3abb72a5"
            ]
        ]
    },
    {
        "id": "3b73689b3abb72a5",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "usuarios",
        "operation": "findOne",
        "output": "toArray",
        "name": "",
        "x": 700,
        "y": 320,
        "wires": [
            [
                "d8b009ae4294a62f"
            ]
        ]
    },
    {
        "id": "8428ce578afdbe7e",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1670,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8b009ae4294a62f",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "encontrado?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 320,
        "wires": [
            [
                "6bb7afe0411f4bdf"
            ],
            [
                "884269f6a50c3475"
            ]
        ]
    },
    {
        "id": "884269f6a50c3475",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "401 error",
        "func": "msg.payload = {\n    \"mensaje\": \"Las credenciales introducidas no pertenecen a ningun usuario\"\n}\n\nmsg.statusCode = 401\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "9909a36164c767c1"
            ]
        ]
    },
    {
        "id": "6bb7afe0411f4bdf",
        "type": "uuid",
        "z": "5c6c220009097d76",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "generar token",
        "field": "payload",
        "fieldType": "msg",
        "x": 1020,
        "y": 300,
        "wires": [
            [
                "1de6c85290b87ab6"
            ]
        ]
    },
    {
        "id": "ae9282f3c9a4846a",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "tokens",
        "operation": "insertOne",
        "output": "toArray",
        "name": "insertar token",
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "34e58d45a8d7d39b"
            ]
        ]
    },
    {
        "id": "1de6c85290b87ab6",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "prepare item",
        "func": "msg.token = msg.payload\n\nmsg.payload = [{\n    \"token\": msg.payload,\n    \"timestamp\": new Date()\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 300,
        "wires": [
            [
                "ae9282f3c9a4846a"
            ]
        ]
    },
    {
        "id": "34e58d45a8d7d39b",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "respuesta",
        "func": "msg.payload = {\n    \"token\": msg.token,\n    \"expires_in\": 600\n}\n\nmsg.statusCode = 200\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 300,
        "wires": [
            [
                "8428ce578afdbe7e"
            ]
        ]
    },
    {
        "id": "9909a36164c767c1",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "09e75c8f2e3aa6f0"
        ],
        "x": 1095,
        "y": 340,
        "wires": []
    },
    {
        "id": "09e75c8f2e3aa6f0",
        "type": "link in",
        "z": "5c6c220009097d76",
        "name": "",
        "links": [
            "9909a36164c767c1"
        ],
        "x": 1565,
        "y": 340,
        "wires": [
            [
                "8428ce578afdbe7e"
            ]
        ]
    },
    {
        "id": "85fac66e841492c3",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales/:idServidorLocal/interrumpir",
        "method": "post",
        "upload": false,
        "swaggerDoc": "63642fe65b1fd0af",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "ef341dc118f4ab03"
            ]
        ]
    },
    {
        "id": "792d7b311c3e80ab",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "token query",
        "func": "msg.servidorLocal = msg.payload\n\nmsg.payload = [\n    {\n        token: msg.req.headers.authorization.toString().split(\"Bearer \")[1]\n    }\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 420,
        "wires": [
            [
                "4d9661936b05eef3"
            ]
        ]
    },
    {
        "id": "4d9661936b05eef3",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "tokens",
        "operation": "findOne",
        "output": "toArray",
        "name": "busca token",
        "x": 850,
        "y": 420,
        "wires": [
            [
                "767b31fec46a4fbb"
            ]
        ]
    },
    {
        "id": "767b31fec46a4fbb",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "encontrado?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "c79a48f76e05df13"
            ],
            [
                "1c97402c220fd9a6"
            ]
        ]
    },
    {
        "id": "1c97402c220fd9a6",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "401 error",
        "func": "msg.payload = {\n    \"mensaje\": \"Token invalido o caducado\"\n}\n\nmsg.statusCode = 401\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "4bac12b49f8d01d6"
            ]
        ]
    },
    {
        "id": "4bac12b49f8d01d6",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 1255,
        "y": 460,
        "wires": []
    },
    {
        "id": "9282269079566ce1",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "respuesta",
        "func": "msg.payload = {\n    \"mensaje\": msg.interrumpir ? \"Servidor local interrumpido\" : \"Servidor local trabajando\"\n}\n\nmsg.statusCode = 200\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 420,
        "wires": [
            [
                "843cdc8f3fc3d9b8"
            ]
        ]
    },
    {
        "id": "843cdc8f3fc3d9b8",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2170,
        "y": 420,
        "wires": []
    },
    {
        "id": "46fdae49c2980eb2",
        "type": "link in",
        "z": "5c6c220009097d76",
        "name": "",
        "links": [
            "4bac12b49f8d01d6",
            "241d36ccb3d62291",
            "186594fec6598ece",
            "499016cac3d55978"
        ],
        "x": 2095,
        "y": 460,
        "wires": [
            [
                "843cdc8f3fc3d9b8"
            ]
        ]
    },
    {
        "id": "c79a48f76e05df13",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "servidor query",
        "func": "msg.payload = [\n    {\n        \"_id\": msg.req.params.idServidorLocal\n    }\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "f88b68d96b749ee5"
            ]
        ]
    },
    {
        "id": "f88b68d96b749ee5",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales_con_ultimo_estado",
        "operation": "findOne",
        "output": "toArray",
        "name": "busca servidor local",
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "7c64166813667d01"
            ]
        ]
    },
    {
        "id": "186594fec6598ece",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 1795,
        "y": 460,
        "wires": []
    },
    {
        "id": "87542421fe41f019",
        "type": "comment",
        "z": "5c6c220009097d76",
        "name": "Interrumpir servidor local",
        "info": "",
        "x": 150,
        "y": 380,
        "wires": []
    },
    {
        "id": "7e07969316e2b5a4",
        "type": "comment",
        "z": "5c6c220009097d76",
        "name": "Obtener token",
        "info": "",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "0039e1ad7c8a9454",
        "type": "comment",
        "z": "5c6c220009097d76",
        "name": "Sensores por servidor local",
        "info": "",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "e0f994f68732c1f2",
        "type": "comment",
        "z": "5c6c220009097d76",
        "name": "Recupera servidores locales",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "7284333d8ebd6359",
        "type": "mqtt out",
        "z": "5c6c220009097d76",
        "name": "/interrumpir/{SERVER_ID}",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d52403817db3438f",
        "x": 2130,
        "y": 380,
        "wires": []
    },
    {
        "id": "076942bdc401e5d3",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "prepara mensaje mqtt",
        "func": "msg.topic = `/interrumpir/${msg.req.params.idServidorLocal}`\n\nmsg.payload = {\n    \"interrumpir\": msg.interrumpir\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 380,
        "wires": [
            [
                "7284333d8ebd6359"
            ]
        ]
    },
    {
        "id": "ef341dc118f4ab03",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "validar peticion",
        "func": "// LOG\nnode.log(`[${msg.req.method}] [${msg.req.url}] ` + JSON.stringify(msg.req.headers))\n\nif(msg.req.headers.authorization === undefined)\n{\n    msg.payload = {\n        \"mensaje\": \"Token invalido o caducado\"\n    }\n    \n    msg.statusCode = 401\n    return [null, msg];\n    \n}else if(Object.keys(msg.payload).length === 0 || msg.payload.interrumpir === undefined || typeof msg.payload.interrumpir !== \"boolean\")\n{\n    msg.payload = {\n        \"mensaje\": \"Error, el cuerpo de la peticion no tiene la propiedad 'interrumpido', o es de tipo incorrecto (boolean)\"\n    }\n    \n    msg.statusCode = 400\n    return [null, msg];\n    \n}else\n{\n    msg.interrumpir = msg.payload.interrumpir\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "792d7b311c3e80ab"
            ],
            [
                "499016cac3d55978"
            ]
        ]
    },
    {
        "id": "499016cac3d55978",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 635,
        "y": 460,
        "wires": []
    },
    {
        "id": "7c64166813667d01",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "comprobar si existe y estado",
        "func": "if(msg.payload === null)\n{\n    msg.payload = {\n        \"mensaje\": \"El servidor local especificado no existe\"\n    }\n    \n    msg.statusCode = 404\n    return [null, msg];\n    \n}else if (msg.payload.estado.estado === \"desconectado\")\n{\n    msg.payload = {\n        \"mensaje\": `El servidor local especificado se encuentra desconectado`\n    }\n    \n    msg.statusCode = 400\n    return [null, msg];\n    \n}else if(msg.payload.estado.estado === \"interrumpido\" && msg.interrumpir)\n{\n    msg.payload = {\n        \"mensaje\": `El servidor local especificado ya se encuentra en estado interrumpido`\n    }\n    \n    msg.statusCode = 400\n    return [null, msg];\n    \n}else if(msg.payload.estado.estado === \"trabajando\" && !msg.interrumpir)\n{\n    msg.payload = {\n        \"mensaje\": `El servidor local especificado ya se encuentra en estado trabajando`\n    }\n    \n    msg.statusCode = 400\n    return [null, msg];\n    \n}else if(msg.payload.estado.estado !== \"trabajando\" && msg.payload.estado.estado !== \"interrumpido\" && !msg.interrumpir)\n{\n    msg.payload = {\n        \"mensaje\": `El servidor local especificado no puede pasar a estado trabajando si se encuentra en estado de ${msg.payload.estado.estado}`\n    }\n    \n    msg.statusCode = 400\n    return [null, msg];\n}else\n{\n    return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 420,
        "wires": [
            [
                "9282269079566ce1",
                "076942bdc401e5d3"
            ],
            [
                "186594fec6598ece"
            ]
        ]
    },
    {
        "id": "7890929343a933df",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales_con_ultimo_estado",
        "operation": "find",
        "output": "toArray",
        "name": "recupera todos los servidores locales",
        "x": 1270,
        "y": 200,
        "wires": [
            [
                "c2f63ced343e7e86"
            ]
        ]
    },
    {
        "id": "c102520e130563d4",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [{\n    \"_id\": msg.req.params.idServidorLocal\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "7890929343a933df"
            ]
        ]
    },
    {
        "id": "6249665737d04a79",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "85bba900e9b117a0"
        ],
        "x": 995,
        "y": 240,
        "wires": []
    },
    {
        "id": "85bba900e9b117a0",
        "type": "link in",
        "z": "5c6c220009097d76",
        "name": "",
        "links": [
            "6249665737d04a79"
        ],
        "x": 1545,
        "y": 240,
        "wires": [
            [
                "249f02b75edc8ce9"
            ]
        ]
    },
    {
        "id": "c2f63ced343e7e86",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "",
        "func": "msg.payload = {\n    ...msg.payload[0],\n    \"sensores\": msg.sensores.sensores\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 200,
        "wires": [
            [
                "249f02b75edc8ce9"
            ]
        ]
    }
]